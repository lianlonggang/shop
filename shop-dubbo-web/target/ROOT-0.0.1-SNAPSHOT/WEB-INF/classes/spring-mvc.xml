<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans          
    http://www.springframework.org/schema/beans/spring-beans.xsd          
    http://code.alibabatech.com/schema/dubbo          
    http://code.alibabatech.com/schema/dubbo/dubbo.xsd  
    http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context.xsd">  
  
    <!--   
        自动扫描controller包下的所有类，如果@Controller注入为bean  
        并将bean依赖注入，即dubbo服务端暴露的Service注入到Controller中  
    -->  
    <dubbo:annotation package="com" />
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<array>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</array>
				</property>
				<property name="objectMapper">
					<bean class="com.fasterxml.jackson.databind.ObjectMapper">
						<property name="serializationInclusion">
							<value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
						</property>
					</bean>
				</property>
			</bean>
			<bean
				class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
				<property name="supportedMediaTypes">
					<array>
						<value>application/xml;charset=UTF-8</value>
					</array>
				</property>
				<property name="marshaller" ref="XStreamMarshaller" />
				<property name="unmarshaller" ref="XStreamMarshaller" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<bean id="XStreamMarshaller" class="com.shop.base.convert.MyXStreamMarshaller">
		<property name="autodetectAnnotations" value="true" />
		<property name="aliases">
			<map>
				<entry key="res" value="java.util.Map.Entry" />
			</map>
		</property>
		<property name="fieldAliases">
			<map>
				<entry key="java.util.Map.Entry" value="res" />
			</map>
		</property>
		<property name="converters">
			<list>
				<bean class="com.shop.base.convert.MapCustomConverter">
				</bean>
			</list>
		</property>
	</bean>
  <!-- 开启注解 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	</bean>
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->  
   <!--  <bean  
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                json转换器  
                <ref bean="mappingJacksonHttpMessageConverter" />  
            </list>  
        </property>  
    </bean>   -->
  
    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->  
    <bean  
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="viewClass"  
            value="org.springframework.web.servlet.view.JstlView" />  
        <property name="prefix" value="/views/" />  
        <property name="suffix" value=".jsp" />  
    </bean>  
  
    <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->  
    <bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="defaultEncoding" value="UTF-8" />  
        <!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->  
        <property name="maxUploadSize" value="200000" />  
    </bean>  
  
    <!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->  
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->  
    <bean id="exceptionResolver"  
        class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
                <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->  
                <prop  
                    key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>  
            </props>  
        </property>  
    </bean>  
  
</beans>  